<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.sangeng"></context:component-scan>

        <!--读取properties文件-->
       <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
       <!--创建连接池注入容器-->
       <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
           <property name="url" value="${jdbc.url}"></property>
           <property name="username" value="${jdbc.username}"></property>
           <property name="password" value="${jdbc.password}"></property>
           <property name="driverClassName" value="${jdbc.driver}"></property>
       </bean>
   <!--spring整合mybatis后控制的创建获取SqlSessionFactory的对象-->
       <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactory">
           <!--配置连接池-->
           <property name="dataSource" ref="dataSource"></property>
           <!--配置mybatis配置文件的路径-->
           <property name="configLocation" value="classpath:mybatis-config.xml"></property>
       </bean>

       <!--mapper扫描配置，扫描到的mapper对象会被注入Spring容器中-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
           <property name="basePackage" value="com.sangeng.dao"></property>
       </bean>
</beans>